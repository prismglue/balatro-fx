local MAX_CARD_DEAL = 8
local CARD_ICONS = {'club_ace_small', 'diamond_ace_small', 'spade_ace_small', 'heart_ace_small'}

function init(self)
	self.deck_pos = go.get_position(".")
	self.card_pos = go.get_position("/card_img")
	self.card_pos1 = go.get_position("/card_img1")
	self.next_card = factory.create('#factory', go.get_position('#collider'))
	self.card_dealt = 0
	self.hands_dealt = 0
end

function update(self, dt)
end

local function disable_self(self)
	self.hands_dealt = self.hands_dealt + 1
	msg.post(msg.url(nil, self.next_card, 'collider'), 'disable')
end

local function on_deck_anim_done(self)
	self.next_card = factory.create('#factory', go.get_position('#collider'))
	local card_icon = CARD_ICONS[math.random(1, 4)]
	print(card_icon)
	sprite.play_flipbook(msg.url(nil, self.next_card, 'body'), card_icon)
	if self.card_dealt >= MAX_CARD_DEAL then
		-- disable next card collider
		disable_self(self)
		return
	else
		msg.post('.', 'clicked') -- causes the drop or click event to deal the rest of the cards
	end
end

-- join looks identical to leave, as each card joins, it grows the table
function on_message(self, message_id, message, sender)
	--print(message_id)
	if message_id == hash("clicked") then
		if self.card_dealt >= MAX_CARD_DEAL then
			print("Can't deal more than "..MAX_CARD_DEAL.." cards")
			-- disable next card collider too
			disable_self(self)
			return
		end
		msg.post('#collider', 'disable') -- don't let users deal cards manually anymore
		-- this should trigger a 'hand remaining' deal instead of a 'single card deal' to match Balatro's behaviour
		local new_card_id = self.next_card
		self.next_card = nil
		self.card_dealt = self.card_dealt + 1
		-- reset previous animation states
		go.set_position(self.card_pos, "/card_img")
		go.set_position(self.card_pos1, "/card_img1")
		msg.post('/hand_zone', 'card_announce', { url = new_card_id, hand = self.hands_dealt } ) -- wait for zone_offer in response
	elseif message_id == hash("reset") then
		print("resetting deck")
		if message.count ~= nil then
			self.card_dealt = self.card_dealt - message.count
		else
			self.card_dealt = 0
		end
		msg.post(msg.url(nil, self.next_card, 'collider'), 'enable')
		msg.post('#collider', 'disable') -- don't let users deal cards manually anymore
	elseif message_id == hash("zone_offer") then
		message.target.z = self.card_dealt
		pprint(message)
		msg.post(message.url, 'fling', { target = message.target })

		-- Animate the topmost card moving into the position just freed
		go.animate('/card_img', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(), go.EASING_LINEAR, 0.05)
		-- Animate the lowest card moving into the position just freed
		go.animate('/card_img1', 'position', go.PLAYBACK_ONCE_FORWARD, self.card_pos, go.EASING_LINEAR, 0.05, 0, on_deck_anim_done)
		-- spawn the next hand card when the cards stop moving
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

function animation_descriptions(self)
	-- deal-card-to-zone - both the hand and the play area act the same, they should take ownership over the cards they are dealt so it's possible to announce their free slots
	-- ^ zones exist in hands and play areas, card_leave_hand and card_join_hand both need to be triggered on card play
	-- ^ card_join_zone - all cards tilt away from new card and move
	-- ^ card_leave_hand - all cards tilt towards missing card and move 
	-- ^ card-fly - diagonal linear fling from current location in hand to new deck location
	-- ^ card-zone-spacing - card overlap is approximately the suit when the card is in your hand, they're negative and flat when played
	-- ^ card-zone-effect - card wiggle only happens when cards are in the hand, standard cards are flat

	-- card-raise - raise the card up, maybe scale it up, shrink the shadow card underneath
	-- card-activate - thrust towards you on the z axis, rotated on the x axis? whatever the left right one is, 'settle' bounce animation on the return to a negative axis

	-- card-select
	-- on-click-and-hold - card hovers above others cards, shadow is obvious
	-- card-selected - moves away from the player on the X/Y axis (it's like there's a center point far down offscreen that the cards move away from)
	
	-- card flipping animations are probably worth a shot as a stretch goal
end
