function init(self)
	self.deck_pos = go.get_position(".")
	self.card_pos = go.get_position("/card_img")
	self.card_pos1 = go.get_position("/card_img1")
	self.next_card = factory.create('#factory', go.get_position('#collider'))
	self.card_dealt = 0
end

function update(self, dt)
end

function on_deck_anim_done(self)
	self.next_card = factory.create('#factory', go.get_position('#collider'))
end

function on_message(self, message_id, message, sender)
	--print(message_id)
	if message_id == hash("clicked") then
		if self.card_dealt >= 8 then
			print("Can't deal more than 8 cards in Balatro")
			return
		end
		local new_card_id = self.next_card
		self.next_card = nil
		self.card_dealt = self.card_dealt + 1
		-- reset previous animation states
		go.set_position(self.card_pos, "/card_img")
		go.set_position(self.card_pos1, "/card_img1")
		-- move it to the hand area
		print("Start card animation (if not running)")
		-- Move topmost card to hand_area
		local hand_position = go.get_position("/hand_area")
		-- hand_position.y will have to change based on the number of cards dealt, and cards will have to shuffle to new final positions
		local destination = vmath.vector3(hand_position.x, hand_position.y, self.card_dealt) -- slowly make new cards go higher
		print(hand_position)
		print(destination)
		go.animate(new_card_id, "position", go.PLAYBACK_ONCE_FORWARD, destination, go.EASING_LINEAR, 0.1, 0, did_animate_deck_top)

		-- Animate the topmost card moving into the position just freed
		go.animate('/card_img', 'position', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(), go.EASING_LINEAR, 0.05)
		-- Animate the lowest card moving into the position just freed
		go.animate('/card_img1', 'position', go.PLAYBACK_ONCE_FORWARD, self.card_pos, go.EASING_LINEAR, 0.05, 0, on_deck_anim_done)
		-- spawn the next hand card when the cards stop moving
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
