function init(self)
	print("I'm a new card")
	self.click_to_deck = true
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function reached_furthest_wiggle(self, url, property_id)
	print("wiggle reached!")
	go.animate(url, 'euler', go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(0, 0, -4), go.EASING_LINEAR, 5)
end

function did_animate_deck_top(self, url, property_id)
	print("top deck animation complete")
	-- this should let us start wiggling and stretching in place
	-- start wiggling by animating out to the 'furthest' position then animating back to another position
	--go.set(url, "euler", vmath.vector3(0, 0, -4))
	go.animate(url, 'euler', go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0, 0, 4), go.EASING_LINEAR, 2.5, 0, reached_furthest_wiggle)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("wiggle") then
	elseif message_id == hash("clicked") then
		print("Card: " .. go.get_id() .. " clicked")
		if self.click_to_deck then
			msg.post("/deck", message_id, message, sender)
			self.click_to_deck = false
			return
		end
		print("Card action unbound")
	elseif message_id == hash("drag_end") and self.click_to_deck then
		msg.post('/deck', 'clicked')
		self.click_to_deck = false
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
