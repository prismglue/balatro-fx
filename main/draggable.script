function on_message(self, message_id, message, sender)
	if message_id == hash('drag_start') then
		-- get cursor offset from current xy to apply in drag events, just like cursor.go
		-- dunno why i can drag trigger areas with the cursor but this'll do
		self.drag_offset = go.get_position()
		self.drag_offset.x = self.drag_offset.x - message.origin_x
		self.drag_offset.y = self.drag_offset.y - message.origin_y
		pprint(message)
	elseif message_id == hash('drag') then
		--pprint(message)
		local pos = go.get_position()
		pos.x = message.x + self.drag_offset.x
		pos.y = message.y + self.drag_offset.y
		go.set_position(pos)
	elseif message_id == hash("drag_end") then
		pprint(message)
	end
end
